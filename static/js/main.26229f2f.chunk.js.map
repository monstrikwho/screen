{"version":3,"sources":["NetworkList.js","SelectNetwork.js","TypePass.js","App.js","index.js"],"names":["NetworkList","networkList","activeNetwork","selectNetwork","className","map","item","key","onClick","name","SelectNetwork","connect","goBack","Button","size","variant","TypePass","done","useState","pass","setPass","show","setShow","handleClose","validatePass","length","useEffect","node","document","querySelector","nodeStyles","window","getComputedStyle","width","offsetWidth","borderLeftWidth","parseFloat","borderRightWidth","paddingLeft","paddingRight","setAttribute","Modal","onHide","Body","countPassArr","split","pop","join","infinite","centerMode","swipeToSlide","variableWidth","arrows","focusOnSelect","e","target","parentNode","indexOf","concat","innerText","App","props","state","bind","connectBtn","cancelBtn","backBtn","doneBtn","this","setState","querySelectorAll","forEach","getNodeWidth","countNetworkList","removedNetwork","splice","Fragment","React","Component","ReactDOM","render","getElementById"],"mappings":"mQAkCeA,MAhCf,YAAqE,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,cACjD,OACE,oBAAIC,UAAU,cAAd,SACGH,EAAYI,KAAI,SAACC,EAAMC,GAAP,OACf,qBACEH,UAAU,eAEVI,QAAS,WACPL,EAAc,CAAEM,KAAMH,EAAMC,SAJhC,UAOE,qBAAKH,UAAU,eAAf,SACE,qBAAKA,UAAU,OAAf,SAAuBE,MAEzB,sBAAKF,UAAU,iBAAf,UACE,qBACEA,UACEF,GAAyB,IAARK,EAAY,mBAAqB,SAFtD,SAKE,mBAAGH,UAAU,wBAEf,qBAAKA,UAAU,oBAAf,SACE,mBAAGA,UAAU,uBAjBZG,S,cCyBAG,MA9Bf,YAA4D,IAAnCP,EAAkC,EAAlCA,cAAeQ,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAC/C,OACE,sBAAKR,UAAU,gBAAf,UACE,qBAAKA,UAAU,eAAf,SAA+BD,EAAcM,OAC7C,qBAAKL,UAAU,aAAf,8BACA,qBAAKA,UAAU,SAAf,mCACA,sBAAKA,UAAU,UAAf,UACE,cAACS,EAAA,EAAD,CACEC,KAAK,KACLC,QAAQ,oBACRP,QAAS,WACPI,KAJJ,oBASA,cAACC,EAAA,EAAD,CACEC,KAAK,KACLC,QAAQ,kBACRP,QAAS,WACPG,KAJJ,qBAQU,W,+CC8JHK,MApLf,YAAqC,IAAjBJ,EAAgB,EAAhBA,OAAQK,EAAQ,EAARA,KAAQ,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,OAEVF,oBAAS,GAFC,mBAE3BG,EAF2B,KAErBC,EAFqB,KA+E5BC,EAAc,kBAAMD,GAAQ,IAG5BE,EAAe,WACnB,GAAoB,IAAhBL,EAAKM,OACP,OAJqBH,GAAQ,GAM/BL,KA2BF,OAxBAS,qBAAU,WACR,IAAMC,EAAOC,SAASC,cAAc,sBAE9BC,EAAaC,OAAOC,iBAAiBL,GACrCM,EAAQN,EAAKO,YACbC,EAAkBC,WAAWN,EAAWK,iBAK5CF,EAJuBG,WAAWN,EAAWO,kBAIlBF,EAHTC,WAAWN,EAAWQ,aACrBF,WAAWN,EAAWS,cAI5B,IACbX,SACGC,cAAc,gBACdW,aAAa,QAAS,sBAEzBZ,SACGC,cAAc,gBACdW,aAAa,QAAS,iBAG1B,CAACrB,IAGF,sBAAKf,UAAU,YAAf,UACE,eAACqC,EAAA,EAAD,CAAOpB,KAAMA,EAAMqB,OAAQnB,EAA3B,UACE,cAACkB,EAAA,EAAME,KAAP,mDACA,qBAAKvC,UAAU,YAAf,SACE,cAACS,EAAA,EAAD,CAAQE,QAAQ,eAAeD,KAAK,KAAKN,QAASe,EAAlD,wBAMJ,sBAAKnB,UAAU,aAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,QAAf,SAAwBe,MAE1B,qBACEf,UAAU,cACVI,QAAS,WACP,IAAMoC,EAAezB,EAAK0B,MAAM,IAChCD,EAAaE,MACb1B,EAAQwB,EAAaG,KAAK,MAL9B,SAQE,mBAAG3C,UAAU,0BAIjB,cAAC,IAAD,2BAvEa,CACf4C,UAAU,EACVC,YAAY,EACZC,cAAc,EACdC,eAAe,EAEfC,QAAQ,EACRC,eAAe,IAgEb,aAxIgB,CAClB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KA2EiBhD,KAAI,SAACC,EAAMC,GAAP,OACf,qBACEH,UAAU,OAEVI,QAAS,SAAC8C,IAE0C,IADnCA,EAAEC,OAAOC,WAAWA,WACxBpD,UAAUqD,QAAQ,iBAC3BrC,EAAQD,EAAKuC,OAAOJ,EAAEC,OAAOI,aANnC,SAUGrD,GARIC,SAYX,sBAAKH,UAAU,UAAf,UACE,cAACS,EAAA,EAAD,CACEE,QAAQ,oBACRD,KAAK,KACLN,QAAS,WACPI,KAJJ,kBAQU,IACV,cAACC,EAAA,EAAD,CACEE,QAAQ,kBACRD,KAAK,KACLN,QAAS,WACPgB,KAJJ,yBCtKaoC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX/B,OAAQ,OACR9B,YAAa,GACbE,cAAe,KACfD,eAAe,GAGjB,EAAKC,cAAgB,EAAKA,cAAc4D,KAAnB,gBACrB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBACjB,EAAKG,QAAU,EAAKA,QAAQH,KAAb,gBACf,EAAKI,QAAU,EAAKA,QAAQJ,KAAb,gBAbE,E,qDAgBnB,WAWEK,KAAKC,SAAS,CAAEpE,YAVI,CAClB,UACA,SACA,mBACA,eACA,UACA,mBACA,UACA,iB,gCAKJ,WAaE2B,SAAS0C,iBAAiB,mBAAmBC,SAAQ,SAACjE,IAZtD,SAAsBqB,GACpB,IAAMG,EAAaC,OAAOC,iBAAiBL,GACrCM,EAAQN,EAAKO,YACbC,EAAkBC,WAAWN,EAAWK,iBAI9C,OACEF,EAJuBG,WAAWN,EAAWO,kBAIlBF,EAHTC,WAAWN,EAAWQ,aACrBF,WAAWN,EAAWS,eAO1BiC,CAAalE,EAAKuB,cAAc,UAClC,KACbvB,EAAKuB,cAAc,SAASW,aAAa,QAAS,qB,2BAKxD,SAAcrC,GACZiE,KAAKC,SAAS,CAAEtC,OAAQ,SAAU5B,oB,wBAGpC,WACEiE,KAAKC,SAAS,CAAEtC,OAAQ,c,uBAG1B,WACEqC,KAAKC,SAAS,CAAEtC,OAAQ,W,qBAG1B,WACEqC,KAAKC,SAAS,CAAEtC,OAAQ,a,qBAG1B,WACE,IAAM0C,EAAmBL,KAAKN,MAAM7D,YAC9ByE,EAAiBD,EAAiBE,OACtCP,KAAKN,MAAM3D,cAAcI,IACzB,GAEF6D,KAAKC,SAAS,CACZtC,OAAQ,OACR9B,YAAY,CAAEyE,GAAH,mBAAsBD,IACjCvE,eAAe,M,oBAInB,WACE,OACE,eAAC,IAAM0E,SAAP,WACyB,SAAtBR,KAAKN,MAAM/B,OACV,cAAC,EAAD,CACE9B,YAAamE,KAAKN,MAAM7D,YACxBC,cAAekE,KAAKN,MAAM5D,cAC1BC,cAAeiE,KAAKjE,gBAGtB,GAEqB,WAAtBiE,KAAKN,MAAM/B,OACV,cAAC,EAAD,CACE5B,cAAeiE,KAAKN,MAAM3D,cAC1BQ,QAASyD,KAAKJ,WACdpD,OAAQwD,KAAKH,YAGf,GAEqB,YAAtBG,KAAKN,MAAM/B,OACV,cAAC,EAAD,CAAUnB,OAAQwD,KAAKF,QAASjD,KAAMmD,KAAKD,UAE3C,U,GAzGuBU,IAAMC,WCDvCC,IAASC,OAAO,cAAC,EAAD,IAASpD,SAASqD,eAAe,W","file":"static/js/main.26229f2f.chunk.js","sourcesContent":["import \"./app.sass\";\n\nfunction NetworkList({ networkList, activeNetwork, selectNetwork }) {\n  return (\n    <ul className=\"connections\">\n      {networkList.map((item, key) => (\n        <li\n          className=\"network-item\"\n          key={key}\n          onClick={() => {\n            selectNetwork({ name: item, key });\n          }}\n        >\n          <div className=\"network-name\">\n            <div className=\"text\">{item}</div>\n          </div>\n          <div className=\"network-status\">\n            <div\n              className={\n                activeNetwork && key === 0 ? \"status connected\" : \"status\"\n              }\n            >\n              <i className=\"fab fa-get-pocket\"></i>\n            </div>\n            <div className=\"status-connection\">\n              <i className=\"fas fa-wifi\"></i>\n            </div>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default NetworkList;\n","import { Button } from \"react-bootstrap\";\r\nimport \"./selectNetwork.sass\";\r\n\r\nfunction SelectNetwork({ selectNetwork, connect, goBack }) {\r\n  return (\r\n    <div className=\"selectNetwork\">\r\n      <div className=\"network-name\">{selectNetwork.name}</div>\r\n      <div className=\"encription\">Encription: WPA2</div>\r\n      <div className=\"signal\">Signal Strength: 28db</div>\r\n      <div className=\"actions\">\r\n        <Button\r\n          size=\"lg\"\r\n          variant=\"outline-secondary\"\r\n          onClick={() => {\r\n            goBack();\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          size=\"lg\"\r\n          variant=\"outline-primary\"\r\n          onClick={() => {\r\n            connect();\r\n          }}\r\n        >\r\n          Connect\r\n        </Button>{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectNetwork;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport \"./typePass.sass\";\r\n\r\nfunction TypePass({ goBack, done }) {\r\n  const [pass, setPass] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  const sliderItems = [\r\n    \"1\",\r\n    \"2\",\r\n    \"3\",\r\n    \"4\",\r\n    \"5\",\r\n    \"6\",\r\n    \"7\",\r\n    \"8\",\r\n    \"9\",\r\n    \"0\",\r\n    \"A\",\r\n    \"a\",\r\n    \"B\",\r\n    \"b\",\r\n    \"C\",\r\n    \"c\",\r\n    \"D\",\r\n    \"d\",\r\n    \"E\",\r\n    \"e\",\r\n    \"F\",\r\n    \"f\",\r\n    \"G\",\r\n    \"g\",\r\n    \"H\",\r\n    \"h\",\r\n    \"I\",\r\n    \"i\",\r\n    \"J\",\r\n    \"j\",\r\n    \"K\",\r\n    \"k\",\r\n    \"L\",\r\n    \"l\",\r\n    \"M\",\r\n    \"m\",\r\n    \"N\",\r\n    \"n\",\r\n    \"O\",\r\n    \"o\",\r\n    \"P\",\r\n    \"p\",\r\n    \"Q\",\r\n    \"q\",\r\n    \"R\",\r\n    \"r\",\r\n    \"S\",\r\n    \"s\",\r\n    \"T\",\r\n    \"t\",\r\n    \"U\",\r\n    \"u\",\r\n    \"V\",\r\n    \"v\",\r\n    \"W\",\r\n    \"w\",\r\n    \"X\",\r\n    \"x\",\r\n    \"Y\",\r\n    \"y\",\r\n    \"Z\",\r\n    \"z\",\r\n  ];\r\n\r\n  const settings = {\r\n    infinite: false,\r\n    centerMode: true,\r\n    swipeToSlide: true,\r\n    variableWidth: true,\r\n    // initialSlide: 10,\r\n    arrows: false,\r\n    focusOnSelect: true,\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const validatePass = () => {\r\n    if (pass.length === 0) {\r\n      return handleShow();\r\n    }\r\n    done();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const node = document.querySelector(\".input-pass .input\");\r\n\r\n    const nodeStyles = window.getComputedStyle(node);\r\n    const width = node.offsetWidth;\r\n    const borderLeftWidth = parseFloat(nodeStyles.borderLeftWidth);\r\n    const borderRightWidth = parseFloat(nodeStyles.borderRightWidth);\r\n    const paddingLeft = parseFloat(nodeStyles.paddingLeft);\r\n    const paddingRight = parseFloat(nodeStyles.paddingRight);\r\n    const domWidth =\r\n      width - borderRightWidth - borderLeftWidth - paddingLeft - paddingRight;\r\n\r\n    if (domWidth > 230) {\r\n      document\r\n        .querySelector(\".input-block\")\r\n        .setAttribute(\"class\", \"input-block d-flex\");\r\n    } else {\r\n      document\r\n        .querySelector(\".input-block\")\r\n        .setAttribute(\"class\", \"input-block\");\r\n    }\r\n    // document.querySelector(\"\");\r\n  }, [pass]);\r\n\r\n  return (\r\n    <div className=\"type-pass\">\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Body>The password field can not be empty!</Modal.Body>\r\n        <div className=\"btn-block\">\r\n          <Button variant=\"outline-dark\" size=\"lg\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n\r\n      <div className=\"input-pass\">\r\n        <div className=\"input-block\">\r\n          <div className=\"input\">{pass}</div>\r\n        </div>\r\n        <div\r\n          className=\"pass-remove\"\r\n          onClick={() => {\r\n            const countPassArr = pass.split(\"\");\r\n            countPassArr.pop();\r\n            setPass(countPassArr.join(\"\"));\r\n          }}\r\n        >\r\n          <i className=\"fas fa-backspace\"></i>\r\n        </div>\r\n      </div>\r\n\r\n      <Slider {...settings}>\r\n        {sliderItems.map((item, key) => (\r\n          <div\r\n            className=\"item\"\r\n            key={key}\r\n            onClick={(e) => {\r\n              const parent = e.target.parentNode.parentNode;\r\n              if (parent.className.indexOf(\"slick-active\") !== -1) {\r\n                setPass(pass.concat(e.target.innerText));\r\n              }\r\n            }}\r\n          >\r\n            {item}\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n      <div className=\"actions\">\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          size=\"lg\"\r\n          onClick={() => {\r\n            goBack();\r\n          }}\r\n        >\r\n          Back\r\n        </Button>{\" \"}\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          size=\"lg\"\r\n          onClick={() => {\r\n            validatePass();\r\n          }}\r\n        >\r\n          Done\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TypePass;\r\n","import React from \"react\";\r\nimport NetworkList from \"./NetworkList\";\r\nimport SelectNetwork from \"./SelectNetwork\";\r\nimport TypePass from \"./TypePass\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      window: \"main\",\r\n      networkList: [],\r\n      selectNetwork: null,\r\n      activeNetwork: false,\r\n    };\r\n\r\n    this.selectNetwork = this.selectNetwork.bind(this);\r\n    this.connectBtn = this.connectBtn.bind(this);\r\n    this.cancelBtn = this.cancelBtn.bind(this);\r\n    this.backBtn = this.backBtn.bind(this);\r\n    this.doneBtn = this.doneBtn.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const networkList = [\r\n      \"My Wifi\",\r\n      \"Wifi 1\",\r\n      \"network one24234\",\r\n      \"another port\",\r\n      \"Toocool\",\r\n      \"Beltelekom 23424\",\r\n      \"CoolNet\",\r\n      \"CoolNet 2\",\r\n    ];\r\n    this.setState({ networkList });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    function getNodeWidth(node) {\r\n      const nodeStyles = window.getComputedStyle(node);\r\n      const width = node.offsetWidth;\r\n      const borderLeftWidth = parseFloat(nodeStyles.borderLeftWidth);\r\n      const borderRightWidth = parseFloat(nodeStyles.borderRightWidth);\r\n      const paddingLeft = parseFloat(nodeStyles.paddingLeft);\r\n      const paddingRight = parseFloat(nodeStyles.paddingRight);\r\n      return (\r\n        width - borderRightWidth - borderLeftWidth - paddingLeft - paddingRight\r\n      );\r\n    }\r\n\r\n    document.querySelectorAll(\"li.network-item\").forEach((item) => {\r\n      const withElem = getNodeWidth(item.querySelector(\".text\"));\r\n      if (withElem > 190) {\r\n        item.querySelector(\".text\").setAttribute(\"class\", \"text runline\");\r\n      }\r\n    });\r\n  }\r\n\r\n  selectNetwork(selectNetwork) {\r\n    this.setState({ window: \"select\", selectNetwork });\r\n  }\r\n\r\n  connectBtn() {\r\n    this.setState({ window: \"connect\" });\r\n  }\r\n\r\n  cancelBtn() {\r\n    this.setState({ window: \"main\" });\r\n  }\r\n\r\n  backBtn() {\r\n    this.setState({ window: \"select\" });\r\n  }\r\n\r\n  doneBtn() {\r\n    const countNetworkList = this.state.networkList;\r\n    const removedNetwork = countNetworkList.splice(\r\n      this.state.selectNetwork.key,\r\n      1\r\n    );\r\n    this.setState({\r\n      window: \"main\",\r\n      networkList: [removedNetwork, ...countNetworkList],\r\n      activeNetwork: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.window === \"main\" ? (\r\n          <NetworkList\r\n            networkList={this.state.networkList}\r\n            activeNetwork={this.state.activeNetwork}\r\n            selectNetwork={this.selectNetwork}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {this.state.window === \"select\" ? (\r\n          <SelectNetwork\r\n            selectNetwork={this.state.selectNetwork}\r\n            connect={this.connectBtn}\r\n            goBack={this.cancelBtn}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {this.state.window === \"connect\" ? (\r\n          <TypePass goBack={this.backBtn} done={this.doneBtn} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}